global
    log /dev/log local0
    log /dev/log local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

defaults
    log global
    mode tcp
    option tcplog
    option dontlognull
    timeout connect 5000
    timeout client 50000
    timeout server 50000

frontend stats
    bind *:7000
    mode http
    stats enable
    stats uri /haproxy?stats
    stats refresh 10s
    stats auth {{ stats_user }}:{{ stats_password }}  # Added authentication with admin/admin

frontend postgres_write
    bind *:5000
    default_backend postgres_master

frontend postgres_read
    bind *:5001
    default_backend postgres_replicas

backend postgres_master
    option httpchk
    http-check send meth OPTIONS uri /master
    http-check expect status 200
    default-server inter 3s fall 3 rise 2 on-marked-down shutdown-sessions
    {% for host in postgres_servers %}
    server {{ host }} {{ hostvars[host]['private_ip'] | default(hostvars[host]['ansible_host']) }}:5432 check port 8008 # THIS LINE!!!!!
    {% endfor %}

backend postgres_replicas
    option httpchk
    http-check send meth OPTIONS uri /replica
    http-check expect status 200
    default-server inter 3s fall 3 rise 2 on-marked-down shutdown-sessions
    {% for host in postgres_servers %}
    server {{ host }} {{ hostvars[host]['private_ip'] | default(hostvars[host]['ansible_host']) }}:5432 check port 8008
    {% endfor %}

frontend infisical_frontend
  bind *:80
  default_backend infisical_backend

backend infisical_backend
  option httpchk GET /api/status
  http-check expect status 200
  {% for host in infisical_servers %}
  server {{ host }} {{ hostvars[host]['private_ip'] | default(hostvars[host]['ansible_host']) }}:8085 check inter 500
  {% endfor %}
  
  frontend redis_master_frontend
  bind *:6379
  default_backend redis_master_backend

backend redis_master_backend
  option tcp-check
  tcp-check send AUTH\ {{ redis_password }}\r\n
  tcp-check expect string +OK
  tcp-check send PING\r\n
  tcp-check expect string +PONG
  tcp-check send info\ replication\r\n
  tcp-check expect string role:master
  tcp-check send QUIT\r\n
  tcp-check expect string +OK
  {% for host in groups['redis'] %}
  server redis{{ loop.index }} {{ hostvars[host]['private_ip'] | default(hostvars[host]['ansible_host'])  }}:6379 check inter 1s
  {% endfor %}